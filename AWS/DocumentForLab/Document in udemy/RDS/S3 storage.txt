//What is S3
- Viết tắt của Simple Storage Service
- Là một dịch vụ lưu trữ dạng Object cung cấp khả năng mở rộng, avaibility, performance
- KH có thể sử dụng S3 để lưu trữ và bảo vệ nhiều loại data cho các usecase như: data lake, website, mobile, backup & storage, archive, enterprise application, IoT device, Big Data & Analytic
- S3 cung cấp nhiều managed feature giúp tối ưu, tổ chức và cấu hình access tới data đáp ứng nhu cầu về business, organization & complicance

//Đặc trưng cơ bản của S3
- Là một Managed Service. User không cần quan tâm tới hạ tầng ở bên dưới
- Cho phép lưu file dưới dạng object với size từ 0-5TB
- High Durability (11 9s), Scalability, High Availability(99.99%), High performance
- Usecase đa dạng (mọi bài toán về lưu trữ từ lớn tới nhỏ đều sử dụng S3)
- Cung cấp nhiều class lưu trữ để tiết kiệm chi phí cho từng loại data
- Cung cấp khả năng phân quyền và giới hạn truy cập một cách chi tiết
- Dễ sử dụng, có thể kết hợp với nhiều service khác cho bài toán automation và data processing

//Features of S3
- S3 cung cấp các tính năng cơ bản sau:
  + Storage classes: cung cấp nhiều hình thức lưu trữ phù hợp cho nhiều loại data khác nhau về nhu cầu access, yêu cầu durability, thời gian lưu trữ khác nhau giúp KH tùy chọn được class lưu trữ phù hợp từ đó tối ưu chi phí
  + Storage management: Cung cấp nhiều tính năng liên quan quản lý như: Life Cycle, Object Lock, Replication, Batch Operation
  + Access Management: Quản lý truy cập đến bucket và các thư mục thông qua cơ chế resource permission & access list. Block public access via IAM, bucket policy, S3 access point, Access Control List, Ownership, Access Analyzer
  + Data processing: kết hợp vói lambda, SNS, SQS để hỗ trợ xử lý data 1 cách nhanh chóng
  + Auto logging and Monitoring: Cung cấp công cụ monitor S3 bucket và truy vết sử dụng CloudTrail
  + Manual Monitoring Tool: Log lại từng record thực hiện trên bucket
  + Analytic and insight: phân tích storage để optimize
  + Strong consistency: Provice strong read-after-write consistency for PUT and DELETE object

//Các ví dụ nỗi bật thường sử dụng với S3
- [VPC, ALB, API GW]         -> Write log -> S3
- IoT                        -> save File -> S3
- [ECS, EC2]                 -> File storage -> S3
- Backup                     -> backup file -> S3
- [CloudWatch, CloudTrail]   -> Log Archive -> s3
- S3                         -> static web hosting -> CloudFront
- S3                         -> Automation process -> Lambda
- S3                         -> Data source > Glue

//S3 có thể kết hợp với các dịch vụ nào
- Dùng làm nơi lưu trữ file cho các ứng dụng chạy trên EC2, Container, Lambda. Các file có thể đa dạng về loại & kích thước (Image, Video, Document)
- Dùng làm nơi chứa/archive log cho hầu hết các dịch vụ khác của AWS(VPC, ALB, APIGateWay..)
- Dùng làm data source cho các bài toán big data & data ware house
- Nơi lưu trữ dữ liệu gửi lên từ các thiết bị IoT
- Vùng lưu trữ tạm thơi cho bài toán ETL ( Extract - Transform - Load) khi kết hợp với lambda
- Host 1 website tĩnh (Html, CSS, JS) khi kết hợp với CloudFront

//Lab-S3 basic Operation
1. Login to AWS Console, navigate to s3
2. Tạo 1 bucket 
3. Thực hiện tạo folder
4. Thực hiện upload file/ folder
5. Thực hiện move file
6. Download file
7. Chỉnh sửa object metadata để trình duyệt quyết định hành động default với file khi open (view trực tiếp hoặc popup download)
8. Thực hiện xóa file

//S3 Bucket Policy
- S3 là một trong số các resource có hỗ trợ Resource Level Policy để giới hạn quyền truy cập bên cạnh IAM Policy 
- Bản chất S3 bucket policy hoạt động như 1 IAM policy nhưng chỉ trong phạm vi bucket và những resource bên trong nó (folder/file)
- S3 bucket policy sẽ cho phép (allow) hoặc chặn (Deny) truy cập tới bucket hoặc các resource bên trong
- Áp dụng cho những bucket yêu cầu security cao, cần được setting giới hạn truy cập một cách chặt chẽ

//Access control list
- Access Control List: Quy định quyền access của một AWS Account hoặc nhóm user (Group) đến bucket hoặc resource bên trong
- Thường dùng trong trường hợp muốn cấp access cho một resource cụ thể bên trong bucket mà không muốn thay đổi bucket policy
- *Gần đây AWS khuyến nghị người dùng không nên xài ACL trừ khi có yêu cầu đặc biệt, thay vào đo hãy sử dụng bucket policy & pre-sign URL là đủ để cover hầu hết các usecase

//S3 versioning
- Sử dụng khi có nhu cầu lưu trữ nhiều version của cùng 1 object
- Tránh được việc mất mát khi tao tác xóa nhầm hoặc ghi đè ( Có thể lấy lại version trước đó)
- Chi phí theo đó sẽ tăng lên so với khi không bật versioning
- Sau khi bật versioning, nếu tắt versioning thì những object trước khi tắt vẫn sẽ có nhiều version, những object sinh sau khi tắt sẽ không có version

//Lab - Versioning
1. Yêu cầu chuẩn bị một file text có nội dung bất kì
2. Bật tính năng versioning của Bucket lên
3. Upload file lên S3
4. Chỉnh sửa nội dung, upload file với cùng tên. Confirm xem có một version mới được tạo ra
5. Tiến hành xóa file. Kiểm tra versioning với Delete Flag
6. Phục hồi file đã bị xóa bằng cách xóa Delete flag
7. Tắt versioning
8. Chỉnh sửa nội dung, upload file với cùng tên. Confirm xem file có bị ghi đè? Các version trước khi tắt versioning có còn không?


//S3 Presign URL
- Khi muốn cấp access tạm thời cho người dùng public tới một object trên S3, AWS cung cấp cơ chế Presign URL
- User có thể dùng Presign URL để dowload/upload object trên s3 trong thời gian quy định (setting lúc phát hành URL)
- Usecase:
  + Muốn cấp access public cho 1 object nhưng không muốn thay đổi ACL hoặc tạo thêm bucket policy
  + Cần authen người dùng hoặc yêu cầu họ làm gì đó trước khi được download file (VD xem quảng cáo)
  + Ngăn chặn resource để public vô thời hạn khiến cho tài nguyên bị khai tác bởi bên khác
*Example flow of S3 Presign URL
Request:
1. Request file -> [Backend server] -> 2.Request Presign URL -> [S3] -> 3.Create Presign URL -> xxx-bucket -> Object
Response:
4. S3 -> Return Presign URL -> Backend Server -> 5.Return URL -> Client -> 6.Client download via internet trực tiếp tới S3

