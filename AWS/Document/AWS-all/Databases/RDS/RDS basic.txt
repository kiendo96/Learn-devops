//RDS(Relational Database Service)
- Là một service giúp người dùng tạo và quản lý các relational Database(database quan hệ)

//Đặc trưng
- Là một DB as a Service. User không cần quan tâm tới hạ tầng ở bên dưới
- Cho phép người dùng tạo ra các database instance độc lập hoặc cụm instance hoạt động dưới mode cluster
- Không thể login vào instance level (khác với việc tự cài DB lên 1 EC2 instance)
- Có thể scale theo 2 hình thức:
  + Scale virtical:Tăng hoặc giảm cấu hình instance
  + Scale horizontal: Thêm hoặc bớt node tuy nhiên node này chỉ có thể read(read-replica)
- Có giới hạn về dung lượng ổ cứng tối đa(64TB đối với MySql, mariadb,... 16TB đối với Microsoft SQL)

//Tính năng
- Cho phép tạo các DB instance hoặc cụm cluster một cách nhanh chóng
- Tự động fail-over giữa master-slave instance khi có sự cố
- High-Availability: Tự động cấu hình instance stand by, người dùng chỉ cần chọn
- Tự động scale dung lượng lưu trữ (optinal)
- Liên kết với CloudWatch để giám sát dễ dàng
- Automate backup & Manage retention
- Dễ dàng chỉnh sửa setting ở cấp độ Database sử dụng parameter group

 //Các engines RDS support:
- Amazon Aurora
- MySql
- MariaDB
- PostgreSQL
- Oracle
- Microsoft SQL Server

//RDS Usecase
- RDS được sử dụng trong hầu hết các trường hợp cần database dạng quan hệ
VD: Lưu trữ thông tin của user, website e-commerce, education...
- RDS thích hợp cho các bài toàn OLAP (online Analatical processing) nhờ khả năng truy vấn mạnh mẽ, cấu hình có thể scale theo yêu cầu

//RDS Pricing
- Về cơ bản RDS tính tiền dựa theo các thông số:
  + Instance size: Instance size càng lớn cost càng cao. Có hỗ trợ reserve instance tương tự EC2
  + Lượng data lưu trữ (GB/month)
  + Dung lượng các bản snapshot được tạo ra
  + Các tính năng khác vd: Backtracking đối với Aurora


//Mô hình triển khai RDS
- RDS có thể triển được triển khai theo một số mô hình sau:
  + Single Instance
  + Single Instance with multi-AZ option = yes
  + Master - Read Only cluster
  + Master - Read Only cluster with Multi-AZ option = yes
  + Master - Multi Read cluster

1> Single Instance
- Chỉ có 1 database instance duy nhất được tạo trên 1 Availability Zone (AZ)
- Nếu có sự cố xảy ra ở cấp độ AZ thì database không thể truy cập
- Phù hợp với môi trường Dev-Test để tiết kiệm chi phí

2> Single Instance with Multi-AZ option enabled
- Một bản sao của instance sẽ được tạo ra ở AZ khác và hoạt động dưới mode standby
- Nhiệm vụ của instance standby này là sync data từ master, không thể truy cập instance này.
- Khi có sự cố, instance standby sẽ được chuyển lên thành master(việc này được aws thực hiện tự động, endpoint url được giữ nguyên)
- Nêu enable multi AZ, số tiền bỏ ra sẽ được x2
- Phù hợp cho Database Production

3> Master - Read only cluster
- Một instance với mode ReadOnly sẽ được tạo ra và liên tục replica data từ master instance
- Instance này chỉ có thể đọc data. Phù hợp cho hệ thống có workload read>write, muốn tối ưu performance của Database
- Sau khi thiết lập quan hệ, instance được tạo ra sẽ kết hợp thành 1 cluster
- Trong trạng thái 2 instance đã hìnht thành cluster, nêu Master instance gặp sự cố, failover sẽ được tự động thực hiện, ReadOnly instance được promote lên làm master
Noted:
  + Nêu 2 instance được tạo ra riêng biệt -> then, mới thiết lập mối quan hệ read-replica, endpoint của 2 instance sẽ riêng biệt nên sau khi failover, cần chỉnh lại connection từ App
  + Nên tạo cluster sau đó mới add node read vào để quản lý connection ở cluster level (Số lượng node rea có thể tùy chọn)

4> Master - Read Only cluster with Multi-AZ option = yes
- Tương tự mô hình Master-Read Only tuy nhiên các node đều được bật multi-AZ enable
- Chi phí sẽ gấp 4 lần mô hình single Instance

5> Master - Multiple read cluster
- Với mô hình này, nhiều hơn 1 reader instance sẽ được tạo ra


//Nên tạo RDS cluster hay RDS instance
- AWS cung cấp cơ chế cho phép tạo ra 1 cluster RDS giúp quản lý node và failover dễ dàng hơn
- Ưu điểm so với việc tạo RDS instance thông thường:
  + Quản lý endpoint ở cấp độ cluster, không bị thay đổi khi instance trong cluster gặp sự cố
  + Failover tự động
  + Scale read instance dễ dàng

//RDS Snapshot
- Cơ chế snapshot của RDS same với EC2. Nói chung nó cũng chỉ là 1 snapshot
- Một số option snapshot của RDS:
  + Manual: Tự tạo
  + System: Snapshot được system tự tạo định kì
  + Shared with me: Snapshot của người khác share cho mình
  + Public: Hạn chế đụng vì không biết trong DB đấy có gì và không có user account
  + Backup service: Sử dụng để tạo các backup chuyên sâu, daily, weekly, monthly...
